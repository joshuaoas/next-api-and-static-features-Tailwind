{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/joshoas/Documents/_BATCAVE/_CODE/_My_GIT_Repos/next-api-and-static-features-Tailwind/pages/matlock/cast/[id].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport PageHead from \"../../../components/PageHead\";\nimport { useRouter } from \"next/router\"; //import characters from \"../../data/matlock/characters.json\";\n\nvar Cast = function Cast(_ref) {\n  var character = _ref.character;\n  var router = useRouter(); //const character = characters[router.query.id];\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(PageHead, {\n    title: character.person.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"container mx-auto px-6 py-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: 'character.image.original',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    className: \"text-lg leading-6 font-medium text-gray-900\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Role: \", character.character.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Birthdate: \", character.person.birthday), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Death: \", character.person.deathday))));\n}; //export async function getStaticProps({ params }) {\n\n\nCast.getInitialProps = function _callee(_ref2) {\n  var query, id, response, character;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          id = query.id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/api/characters/\".concat(id)));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          character = _context.sent;\n          console.log(character); //return { props: { episodes } };\n\n          return _context.abrupt(\"return\", {\n            character: character\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Cast;","map":{"version":3,"sources":["/Users/joshoas/Documents/_BATCAVE/_CODE/_My_GIT_Repos/next-api-and-static-features-Tailwind/pages/matlock/cast/[id].js"],"names":["React","Layout","fetch","Link","PageHead","useRouter","Cast","character","router","person","name","birthday","deathday","getInitialProps","query","id","response","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC/B,MAAMC,MAAM,GAAGH,SAAS,EAAxB,CAD+B,CAE/B;;AACA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,SAAS,CAACE,MAAV,CAAiBC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAE,0BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEA;AAAI,IAAA,SAAS,EAAC,6CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmEH,SAAS,CAACA,SAAV,CAAoBG,IAAvF,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeH,SAAS,CAACE,MAAV,CAAiBE,QAAhC,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWJ,SAAS,CAACE,MAAV,CAAiBG,QAA5B,CAJA,CAFD,CADD,CADD;AA4BA,CA/BD,C,CAiCA;;;AACAN,IAAI,CAACO,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AACdC,UAAAA,EADc,GACPD,KADO,CACdC,EADc;AAAA;AAAA,2CAGCb,KAAK,gDACaa,EADb,EAHN;;AAAA;AAGhBC,UAAAA,QAHgB;AAAA;AAAA,2CAOEA,QAAQ,CAACC,IAAT,EAPF;;AAAA;AAOhBV,UAAAA,SAPgB;AAStBW,UAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ,EATsB,CAWtB;;AAXsB,2CAYf;AAAEA,YAAAA,SAAS,EAATA;AAAF,WAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAeA,eAAeD,IAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport PageHead from \"../../../components/PageHead\";\n\nimport { useRouter } from \"next/router\";\n//import characters from \"../../data/matlock/characters.json\";\n\nconst Cast = ({ character }) => {\n\tconst router = useRouter();\n\t//const character = characters[router.query.id];\n\treturn (\n\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<PageHead title={character.person.name} />\n\t\t\t\t<div className=\"container mx-auto px-6 py-6\">\n\t\t\t\t\t<img src={'character.image.original'} />\n\t\t\t\t<h3 className=\"text-lg leading-6 font-medium text-gray-900\">Role: {character.character.name}</h3>\n\t\t\t\t<p>Birthdate: {character.person.birthday}</p>\n\t\t\t\t<p>Death: {character.person.deathday}</p>\n\n\t\t\t\t{/*\n\t\t\t\t<ul>\n\t\t\t\t\t{episodes.map(episode => (\n\t\t\t\t\t\t<li key={episode.id} style={{marginBottom: \"30px\"}}>\n\t\t\t\t\t\t\t<h3 className=\"text-lg leading-6 font-medium text-gray-900\">{episode.name}</h3>\n\t\t\t\t\t\t\t<p>Air date: {episode.airdate}</p>\n\t\t\t\t\t\t\t<p>Runtime: {episode.runtime}</p>\n\t\t\t\t\t\t\t{episode.summary ? (\n\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: episode.summary }} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t\t\t\t*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\n//export async function getStaticProps({ params }) {\nCast.getInitialProps = async ({ query }) => {\n\tconst { id } = query;\n\n\tconst response = await fetch(\n\t\t`http://localhost:3000/api/characters/${id}`\n\t);\n\n\tconst character = await response.json();\n\n\tconsole.log(character);\n\n\t//return { props: { episodes } };\n\treturn { character };\n};\n\nexport default Cast;\n"]},"metadata":{},"sourceType":"module"}