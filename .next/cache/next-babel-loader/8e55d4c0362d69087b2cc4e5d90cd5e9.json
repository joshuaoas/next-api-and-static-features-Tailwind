{"ast":null,"code":"var _jsxFileName = \"/Users/joshoas/Documents/_BATCAVE/_CODE/_My_GIT_Repos/next-api-and-static-features-Tailwind/pages/matlock/season/[id].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport PageHead from \"../../../components/PageHead\";\nimport { useRouter } from \"next/router\"; //import characters from \"../../data/matlock/characters.json\";\n\nconst Season = ({\n  episodes\n}) => {\n  const router = useRouter(); //const character = characters[router.query.id];\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(PageHead, {\n    title: 'season' + episodes[0].number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"container mx-auto px-6 py-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, episodes.map(episode => __jsx(\"li\", {\n    key: episode.id,\n    style: {\n      marginBottom: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"text-lg leading-6 font-medium text-gray-900\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, episode.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Air date: \", episode.airdate), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Runtime: \", episode.runtime), episode.summary ? __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: episode.summary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : null))))));\n}; //export async function getStaticProps({ params }) {\n\n\nSeason.getInitialProps = async ({\n  query\n}) => {\n  const {\n    id\n  } = query;\n  const response = await fetch(`http://localhost:3000/api/matlock/season/${id}`);\n  const episodes = await response.json();\n  console.log(episodes); //return { props: { episodes } };\n\n  return {\n    episodes\n  };\n};\n\nexport default Season;","map":{"version":3,"sources":["/Users/joshoas/Documents/_BATCAVE/_CODE/_My_GIT_Repos/next-api-and-static-features-Tailwind/pages/matlock/season/[id].js"],"names":["React","Layout","fetch","Link","PageHead","useRouter","Season","episodes","router","number","map","episode","id","marginBottom","name","airdate","runtime","summary","__html","getInitialProps","query","response","json","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChC,QAAMC,MAAM,GAAGH,SAAS,EAAxB,CADgC,CAEhC;;AACA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,KAAK,EAAE,WAAWE,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,QAAQ,CAACG,GAAT,CAAaC,OAAO,IACpB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAqB,IAAA,KAAK,EAAE;AAACC,MAAAA,YAAY,EAAE;AAAf,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,6CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DF,OAAO,CAACG,IAArE,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcH,OAAO,CAACI,OAAtB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaJ,OAAO,CAACK,OAArB,CAHD,EAIEL,OAAO,CAACM,OAAR,GACA;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEP,OAAO,CAACM;AAAlB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAEG,IANL,CADA,CADF,CADA,CAFD,CADD,CADD;AAqBA,CAxBD,C,CA0BA;;;AACAX,MAAM,CAACa,eAAP,GAAyB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC7C,QAAM;AAAER,IAAAA;AAAF,MAASQ,KAAf;AAEA,QAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAC1B,4CAA2CU,EAAG,EADpB,CAA5B;AAIA,QAAML,QAAQ,GAAG,MAAMc,QAAQ,CAACC,IAAT,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAT6C,CAW7C;;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACA,CAbD;;AAeA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport PageHead from \"../../../components/PageHead\";\n\nimport { useRouter } from \"next/router\";\n//import characters from \"../../data/matlock/characters.json\";\n\nconst Season = ({ episodes }) => {\n\tconst router = useRouter();\n\t//const character = characters[router.query.id];\n\treturn (\n\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<PageHead title={'season' + episodes[0].number} />\n\t\t\t\t<div className=\"container mx-auto px-6 py-6\">\n\t\t\t\t<ul>\n\t\t\t\t\t{episodes.map(episode => (\n\t\t\t\t\t\t<li key={episode.id} style={{marginBottom: \"30px\"}}>\n\t\t\t\t\t\t\t<h3 className=\"text-lg leading-6 font-medium text-gray-900\">{episode.name}</h3>\n\t\t\t\t\t\t\t<p>Air date: {episode.airdate}</p>\n\t\t\t\t\t\t\t<p>Runtime: {episode.runtime}</p>\n\t\t\t\t\t\t\t{episode.summary ? (\n\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: episode.summary }} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\n//export async function getStaticProps({ params }) {\nSeason.getInitialProps = async ({ query }) => {\n\tconst { id } = query;\n\n\tconst response = await fetch(\n\t\t`http://localhost:3000/api/matlock/season/${id}`\n\t);\n\n\tconst episodes = await response.json();\n\n\tconsole.log(episodes);\n\n\t//return { props: { episodes } };\n\treturn { episodes };\n};\n\nexport default Season;\n"]},"metadata":{},"sourceType":"module"}