{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/joshoas/Documents/_BATCAVE/_CODE/_My_GIT_Repos/next-api-and-static-features-Tailwind/pages/matlock/season/[id].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport PageHead from \"../../../components/PageHead\";\nimport { useRouter } from \"next/router\"; //import characters from \"../../data/matlock/characters.json\";\n\nvar Season = function Season(_ref) {\n  var episodes = _ref.episodes;\n  var router = useRouter(); //const character = characters[router.query.id];\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(PageHead, {\n    title: 'season' + episodes[0].number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"container mx-auto px-6 py-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, episodes.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      style: {\n        marginBottom: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"text-lg leading-6 font-medium text-gray-900\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, episode.name), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Air date: \", episode.airdate), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Runtime: \", episode.runtime), episode.summary ? __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: episode.summary\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }) : null);\n  })))));\n}; //export async function getStaticProps({ params }) {\n\n\nSeason.getInitialProps = function _callee(_ref2) {\n  var query, id, response, episodes;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          id = query.id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/api/matlock/season/\".concat(id)));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          episodes = _context.sent;\n          console.log(episodes); //return { props: { episodes } };\n\n          return _context.abrupt(\"return\", {\n            episodes: episodes\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Season;","map":{"version":3,"sources":["/Users/joshoas/Documents/_BATCAVE/_CODE/_My_GIT_Repos/next-api-and-static-features-Tailwind/pages/matlock/season/[id].js"],"names":["React","Layout","fetch","Link","PageHead","useRouter","Season","episodes","router","number","map","episode","id","marginBottom","name","airdate","runtime","summary","__html","getInitialProps","query","response","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChC,MAAMC,MAAM,GAAGH,SAAS,EAAxB,CADgC,CAEhC;;AACA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,KAAK,EAAE,WAAWE,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,QAAQ,CAACG,GAAT,CAAa,UAAAC,OAAO;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAqB,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,6CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DF,OAAO,CAACG,IAArE,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcH,OAAO,CAACI,OAAtB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaJ,OAAO,CAACK,OAArB,CAHD,EAIEL,OAAO,CAACM,OAAR,GACA;AAAK,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEP,OAAO,CAACM;AAAlB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEG,IANL,CADoB;AAAA,GAApB,CADF,CADA,CAFD,CADD,CADD;AAqBA,CAxBD,C,CA0BA;;;AACAX,MAAM,CAACa,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAChBR,UAAAA,EADgB,GACTQ,KADS,CAChBR,EADgB;AAAA;AAAA,2CAGDV,KAAK,oDACiBU,EADjB,EAHJ;;AAAA;AAGlBS,UAAAA,QAHkB;AAAA;AAAA,2CAODA,QAAQ,CAACC,IAAT,EAPC;;AAAA;AAOlBf,UAAAA,QAPkB;AASxBgB,UAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EATwB,CAWxB;;AAXwB,2CAYjB;AAAEA,YAAAA,QAAQ,EAARA;AAAF,WAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAeA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport PageHead from \"../../../components/PageHead\";\n\nimport { useRouter } from \"next/router\";\n//import characters from \"../../data/matlock/characters.json\";\n\nconst Season = ({ episodes }) => {\n\tconst router = useRouter();\n\t//const character = characters[router.query.id];\n\treturn (\n\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<PageHead title={'season' + episodes[0].number} />\n\t\t\t\t<div className=\"container mx-auto px-6 py-6\">\n\t\t\t\t<ul>\n\t\t\t\t\t{episodes.map(episode => (\n\t\t\t\t\t\t<li key={episode.id} style={{marginBottom: \"30px\"}}>\n\t\t\t\t\t\t\t<h3 className=\"text-lg leading-6 font-medium text-gray-900\">{episode.name}</h3>\n\t\t\t\t\t\t\t<p>Air date: {episode.airdate}</p>\n\t\t\t\t\t\t\t<p>Runtime: {episode.runtime}</p>\n\t\t\t\t\t\t\t{episode.summary ? (\n\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: episode.summary }} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\n//export async function getStaticProps({ params }) {\nSeason.getInitialProps = async ({ query }) => {\n\tconst { id } = query;\n\n\tconst response = await fetch(\n\t\t`http://localhost:3000/api/matlock/season/${id}`\n\t);\n\n\tconst episodes = await response.json();\n\n\tconsole.log(episodes);\n\n\t//return { props: { episodes } };\n\treturn { episodes };\n};\n\nexport default Season;\n"]},"metadata":{},"sourceType":"module"}